1. 画像マップ＋クリックイベント
例： 地図画像の特定の座標をクリックでイベント発火
仕組み： 画像上に透明な要素（<div>や<area>）を重ねて、クリック時に特定の処理を実行。座標判定ならマウス座標からピクセル値を逆算してもOK。

2. 要素のドラッグ＆ドロップ
例： オブジェクトを正しい位置にドラッグすると次のステージへ
仕組み： dragstart, dragover, drop イベントを活用。正しい位置に落とすことでフラグを立てる。

5. クライアントサイドでの軽いファイル解析
例： ドラッグ＆ドロップで特定のファイルを読み込ませると先に進む
仕組み：
<input type="file"> または drag & drop でファイル読み込み → FileReader で中身をチェック。
(予想しない場所にファイルd&dの読み込みができるようにしておく)

3. キーボード入力による暗号解読
例： ページに入力欄があり、正しいコードを入れると次のヒントが出る
仕組み： JSで文字列一致を判定して、条件が合えばDOMを操作してヒント表示。
（ctrl fで白文字を探させて、そこをクリックとか。clickableの見た目にならないように隠す）

対話形式の謎解き
チャットアプリを模して、特定のメッセージを入力するとイベント進行

7. 複数ページ間の情報連携を必要とする謎
例： ページAのボタンと、ページBのスクロール位置が一致すると先へ
仕組み：
localStorage や URLクエリ文字列、postMessage() などを活用して状態を共有。

8. ローカルストレージによる進行管理
例： プレイヤーの進捗を保存して、途中から再開できる
仕組み： localStorageで鍵やフラグを保存。読み込み時に状態を再現。

9. デバイスの加速度センサやジャイロを利用（スマホ向け）
例： スマホを傾けると文字が出てくる／振るとヒントが出る
仕組み：
DeviceOrientationEvent や DeviceMotionEvent を使ってデバイスの動きを検出。

 環境依存仕掛け：画面サイズ・言語・時刻で挙動変化
例： 深夜0時にだけ現れるヒント／言語設定が英語のときだけ読める
仕組み：
navigator.language（言語）、window.innerWidth（サイズ）、new Date()（時刻）で条件分岐。
条件に合ったときだけDOMに要素を追加 or 操作可能に。

3. 画像内に埋め込まれたメタデータやステガノグラフィ
例： 地図画像に何もないようで、実はbase64のコメントにヒントが
仕組み：
JSで画像をbase64として扱い、コメントやバイナリ内のテキストを解析する。超マニアックだけど映える。

4. マウスの軌道パターンを判定して次へ
例： ある「形」をなぞるように動かすと反応する
仕組み：
mousemoveイベントで座標を連続取得 → 形状マッチング（単純なL字、円など）

13. マウスを使わないと進めない／逆にキーボードのみで操作
例： 一切のクリックが無効、TabとEnterだけで操作しないと進めない
仕組み： tabindexやkeydownイベントを駆使してマウス封じ＆キーボード誘導

15. タイポグラフィによる違和感に気づかせる
例： 同じに見えるが一部だけフォントが違う文字列
仕組み： CSSで特定の文字だけフォントを変更 → 判別できれば次へ進むロジックに

16. 要素の“裏面”をめくる操作
例： カードの表には何もないが、裏返すとヒントが書かれている
仕組み： CSS3の3D変形＋transform: rotateY(180deg);などで裏表を表現

17. 視点が切り替わる仕掛け
例： ページの一部が「鏡」になっていて、そこだけ映る内容が違う
仕組み： <canvas>やCSSで反転表示した領域を作り、本来見えないヒントをそこに配置

18. 同じ要素を一定の順序で操作しないと反応しない
例： A→B→C→Aの順に3つのボタンを押すと開く
仕組み： 押下履歴を配列で保存し、正しいパターンだけ許可

19. マルチステップ操作による伏線回収
例： 最初のページで行った操作が、最後のページに影響している（例えば文字色変更など）
仕組み： localStorageで操作記録 → 後のページで読み取り、要素の変化に利用

21. 天気や現実の日時をヒントにする
例（都市探索風）： 「事件は雨の日に起きた」→ プレイヤーのPCの天気が「雨」のときだけヒントが出現
仕組み：
Web API（天気API）で現在地の天気取得（※要Web連携）
Date()で日時も使える（「夜0時に開く」「4月22日限定のヒント」など）
（静的ページではAPI叩くのはむずそうなので日付ごとに何か変えるとか？）

22. GPSや近似地名による限定解除（スマホ）
例： 地図アプリ風ページで、現在位置が「新宿駅周辺」に近いと解除されるヒント
仕組み：
navigator.geolocationで座標取得 → 地名と照合（もちろん「架空の地名」でもOK）
(地図を表示させ、ピンを打つとその付近の何か、みたいなとか)

28. “記録されていない履歴”を使う
例（都市探索風）： プレイヤーが“何回この通りを通ったか”が進行条件になる
仕組み：
特定のページへの遷移をlocalStorageでカウント → 「5回目の訪問で発見」など

31. 偽の「404エラー」ページが実は謎解きの一部
例： ページが見つからないと表示されるが、よく見ると文章に暗号が紛れている
仕組み： 通常のページで404.html風のレイアウトを表示し、HTML中にヒントを配置

サイト上に条件を満たすと出現する選択ダイアログ
それでcssファイルを取得して適用させる、など

38. メタ情報を使った仕掛け
例： ページのURLの「末尾だけが日付っぽい」 → 実はタイムトラベル設定になっていて日付を変えるとページ内容が変化する
仕組み： ?date=20250420のようなクエリパラメータで出力内容を変更

40. “ある種の知識”がないと進めないが、習得が前提となっている
例： モールス信号、手旗信号、数字の筆順順、工業製品の型番ルール…など
仕組み： サイト内にチュートリアルを用意し、「学ばせたことを前提に謎を出す」

41. IntersectionObserver
→ ページ内のある要素が画面に入るかどうかを監視する機能
🧩 ギミック例：
プレイヤーが“偶然あるエリアをスクロールして見つける”ことで何かが変化する
ページ最下部にある謎の“白紙エリア”をスクロールして通過すると、ページの一部が書き換わる
街の風景写真の中で、“特定の建物”が画面に入った瞬間に動き出す人物（犯人かも？

42. history.pushState / history.replaceState
→ ページ遷移なしにURLを書き換える機能
🧩 ギミック例：
URLをよく見ると「ちょっとずつ変化している」→ その変化に意味がある
プレイヤーの行動に応じてURL末尾が ?case=delta → ?case=echo → ?case=foxtrot と変わり、並べるとメッセージが浮かぶ
謎のループページ：戻ってもURLだけが違う → 進むと全URLの組み合わせがヒントになる

imageをdlし、特定の加工をして再アップロードすると遷移、とか

49. navigator.connection
→ プレイヤーの通信状況を取得する
🧩 ギミック例：
「ネット接続が不安定なときにだけ開くポータル」などのメタ的ギミック
一度“オフライン”になるとページが変化し、秘密のルートが開く
通信速度に応じて表示内容が微妙に異なり、それがヒントに


requestIdleCallback
→ ブラウザの処理が落ち着いた“アイドル時”に実行される関数
🧩 ギミック例：
「操作を一切せずにしばらく放置」すると何かが起きる
椅子に座った人物のページ → 何も操作しないと“つぶやき”が出現する
ページを読みっぱなしにして10秒放置 → 背景画像が変わり、ヒントが浮かぶ


